{
	"name": "purebasic-extension",
	"displayName": "PureBasic Extension",
	"description": "PureBasic extension for Visual Studio Code",
	"version": "0.0.3",
	"preview": true,
	"author": "Eddy R.",
	"publisher": "eddy-r",
	"license": "MIT",
	"repository": {
		"type": "git",
		"url": "https://github.com/rineddy/purebasic-extension"
	},
	"engines": {
		"vscode": "^1.23.0"
	},
	"categories": [
		"Programming Languages",
		"Debuggers",
		"Formatters",
		"Linters"
	],
	"keywords": [
		"multi-root ready",
		"code beautifier"
	],
	"icon": "images/purebasic.png",
	"contributes": {
		"configurationDefaults": {
			"[purebasic]": {
				"editor.insertSpaces": false,
				"editor.formatOnSave": true,
				"editor.formatOnType": true,
				"editor.detectIndentation": false,
				"editor.autoIndent": true,
				"editor.tabSize": 3
			}
		},
		"configuration": {
			"type": "object",
			"title": "PureBasic Configuration",
			"properties": {
				"purebasicLanguage.diagnostics.maxNumberOfProblems": {
					"description": "Controls the maximum number of problems produced by the language server.",
					"scope": "resource",
					"type": "number",
					"default": 100
				},
				"purebasicLanguage.trace.server": {
					"description": "Traces the communication between VS Code and the language server.",
					"scope": "window",
					"type": "string",
					"enum": [
						"off",
						"messages",
						"verbose"
					],
					"default": "off"
				},
				"purebasicLanguage.indentationRules": {
					"description": "Determines how to indent the source code.",
					"scope": "resource",
					"type": "array",
					"default": [
						{
							"regex": "\\b(While|Repeat|ForEach|For|With|Structure|StructureUnion|Macro|Import|ImportC|Interface|Procedure|ProcedureDLL|ProcedureCDLL|ProcedureC|If|CompilerIf|DataSection|DeclareModule|Module|Enumeration|EnumerationBinary)\\b",
							"flags": "i",
							"before": 0,
							"after": 1
						},
						{
							"regex": "\\b(Wend|Until|ForEver|Next|EndWith|EndStructure|EndStructureUnion|EndMacro|EndImport|EndInterface|EndProcedure|EndIf|CompilerEndIf|EndDataSection|EndDeclareModule|EndModule|EndEnumeration)\\b",
							"flags": "i",
							"before": -1,
							"after": 0
						},
						{
							"regex": "\\b(Else|ElseIf|Case|Default|CompilerElse|CompilerElseIf|CompilerCase|CompilerDefault)\\b",
							"flags": "i",
							"before": -1,
							"after": 1
						},
						{
							"regex": "\\b(Select|CompilerSelect)\\b",
							"flags": "i",
							"before": 0,
							"after": 2
						},
						{
							"regex": "\\b(EndSelect|CompilerEndSelect)\\b",
							"flags": "i",
							"before": -2,
							"after": 0
						}
					]
				}
			}
		}
	},
	"main": "./client/out/",
	"activationEvents": [
		"onLanguage:purebasic"
	],
	"scripts": {
		"postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
		"compile": "tsc -b",
		"watch": "tsc -b -w",
		"test": "sh ./client/scripts/e2e.sh",
		"vscode:prepublish": "cd client && npm run update-vscode && cd .. && npm run compile",
		"deploy": "rimraf \"*.vsix\" \"**/out\" && npm version patch && vsce publish"
	},
	"devDependencies": {
		"@types/mocha": "^5.2.0",
		"@types/node": "^8.0.0",
		"rimraf": "^2.6.2",
		"tslint": "^5.11.0",
		"typescript": "^3.1.3"
	}
}
